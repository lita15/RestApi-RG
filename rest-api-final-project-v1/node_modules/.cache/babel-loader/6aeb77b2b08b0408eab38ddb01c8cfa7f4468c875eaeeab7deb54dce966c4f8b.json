{"ast":null,"code":"var _jsxFileName = \"D:\\\\KULIAH\\\\MSIB\\\\Ruang Guru\\\\Restful API\\\\rest-api-final-project-v1\\\\src\\\\routes\\\\EditPhoto.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditPhoto = () => {\n  _s();\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [captions, setCaptions] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const editPhoto = e => {\n    e.preventDefault();\n    // TODO: answer here\n    const data = {\n      imageUrl: imageUrl,\n      captions: captions,\n      createdAt: \"tes\",\n      updatedAt: \"tes\"\n    };\n    const fetchData = fetch(`http://localhost:3001/photos/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n    });\n    // console.log(fetchData.then((data) => data));\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    const edit = async id => {\n      setLoading(true);\n      const data = await fetch(`http://localhost:3001/photos/${id}`);\n      const parse = await data.json();\n      console.log(parse);\n      setImageUrl(parse.imageUrl);\n      setCaptions(parse.captions);\n      setLoading(false);\n    };\n    edit(id);\n  }, [id]);\n\n  // const editPhoto = (e) => {\n  //   e.preventDefault();\n  //   const data = {\n  //     imageUrl: imageUrl,\n  //     captions: captions,\n  //     createdAt: \"tes\",\n  //     updatedAt: \"tes\",\n  //   };\n  //   console.log(data);\n  //   return fetch(\"http://localhost:3001/photos/\" + id, {\n  //     // Enter your IP address here\n\n  //     method: \"PATCH\",\n  //     headers: { \"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n  //   });\n  // };\n\n  // useEffect(() => {\n  //   setLoading(true);\n  //   const fetchData = (id) => {\n  //     setLoading(true);\n  //     return (\n  //       fetch(\"http://localhost:3001/photos/\" + id)\n  //         .then((response) => response.json())\n  //         .then((data) => setImageUrl(data.imageUrl))\n  //         // .then((data) => setCaptions(data.captions))\n  //         .then(() => setLoading(false))\n  //     );\n  //   };\n  //   fetchData(id);\n  // }, [id]);\n\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        width: \"100%\",\n        textAlign: \"center\",\n        marginTop: \"20px\"\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: captions\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"edit-form\",\n        onSubmit: editPhoto,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Image Url:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"edit-input\",\n            type: \"text\",\n            value: imageUrl,\n            onChange: e => setImageUrl(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Captions:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"edit-input\",\n            type: \"text\",\n            value: captions,\n            \"data-testid\": \"captions\",\n            onChange: e => setCaptions(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"submit-btn\",\n          type: \"submit\",\n          value: \"Submit\",\n          \"data-testid\": \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(EditPhoto, \"p+jS3+l7KRtSv5CA2Rn6WpTEdrU=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = EditPhoto;\nexport default EditPhoto;\nvar _c;\n$RefreshReg$(_c, \"EditPhoto\");","map":{"version":3,"names":["useEffect","useState","useNavigate","useParams","EditPhoto","imageUrl","setImageUrl","captions","setCaptions","loading","setLoading","error","setError","navigate","id","editPhoto","e","preventDefault","data","createdAt","updatedAt","fetchData","fetch","method","headers","body","JSON","stringify","edit","parse","json","console","log","width","textAlign","marginTop","target","value"],"sources":["D:/KULIAH/MSIB/Ruang Guru/Restful API/rest-api-final-project-v1/src/routes/EditPhoto.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nconst EditPhoto = () => {\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [captions, setCaptions] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  const editPhoto = (e) => {\n    e.preventDefault();\n    // TODO: answer here\n    const data = {\n      imageUrl: imageUrl,\n      captions: captions,\n      createdAt: \"tes\",\n      updatedAt: \"tes\",\n    };\n\n    const fetchData = fetch(`http://localhost:3001/photos/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n    });\n    // console.log(fetchData.then((data) => data));\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    const edit = async (id) => {\n      setLoading(true);\n      const data = await fetch(`http://localhost:3001/photos/${id}`);\n      const parse = await data.json();\n      console.log(parse);\n      setImageUrl(parse.imageUrl);\n      setCaptions(parse.captions);\n      setLoading(false);\n    };\n    edit(id);\n  }, [id]);\n\n  // const editPhoto = (e) => {\n  //   e.preventDefault();\n  //   const data = {\n  //     imageUrl: imageUrl,\n  //     captions: captions,\n  //     createdAt: \"tes\",\n  //     updatedAt: \"tes\",\n  //   };\n  //   console.log(data);\n  //   return fetch(\"http://localhost:3001/photos/\" + id, {\n  //     // Enter your IP address here\n\n  //     method: \"PATCH\",\n  //     headers: { \"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n  //   });\n  // };\n\n  // useEffect(() => {\n  //   setLoading(true);\n  //   const fetchData = (id) => {\n  //     setLoading(true);\n  //     return (\n  //       fetch(\"http://localhost:3001/photos/\" + id)\n  //         .then((response) => response.json())\n  //         .then((data) => setImageUrl(data.imageUrl))\n  //         // .then((data) => setCaptions(data.captions))\n  //         .then(() => setLoading(false))\n  //     );\n  //   };\n  //   fetchData(id);\n  // }, [id]);\n\n  if (error) return <div>Error!</div>;\n\n  return (\n    <>\n      {loading ? (\n        <h1 style={{ width: \"100%\", textAlign: \"center\", marginTop: \"20px\" }}>\n          Loading...\n        </h1>\n      ) : (\n        <div className=\"container\">\n          <>{captions}</>\n          <form className=\"edit-form\" onSubmit={editPhoto}>\n            <label>\n              Image Url:\n              <input\n                className=\"edit-input\"\n                type=\"text\"\n                value={imageUrl}\n                onChange={(e) => setImageUrl(e.target.value)}\n              />\n            </label>\n            <label>\n              Captions:\n              <input\n                className=\"edit-input\"\n                type=\"text\"\n                value={captions}\n                data-testid=\"captions\"\n                onChange={(e) => setCaptions(e.target.value)}\n              />\n            </label>\n            <input\n              className=\"submit-btn\"\n              type=\"submit\"\n              value=\"Submit\"\n              data-testid=\"submit\"\n            />\n          </form>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default EditPhoto;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}